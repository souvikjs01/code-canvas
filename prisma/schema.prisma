generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String  @id
  email                  String  @unique
  name                   String
  isPro                  Boolean
  proSince               DateTime?
  lemonSqueezyCustomerId String?
  lemonSqueezyOrderId    String?

  codeExecution   CodeExecution[]
  snippets        Snippet[]
  snippetComments SnippetComment[]
  stars           Star[]
}

model CodeExecution {
  id       String  @id @default(uuid())
  language String
  code     String
  output   String?
  error    String?
  userId   String
  user     User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Snippet {
  id       String @id @default(uuid())
  title    String
  language String
  code     String
  userName String

  snippetComments SnippetComment[]
  stars           Star[]

  userId   String
  user     User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model SnippetComment {
  id        String @id @default(uuid())
  snippetId String
  userId    String
  userName  String
  content   String

  snippet Snippet @relation(fields: [snippetId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@index([snippetId])
}

model Star {
  id        String @id @default(uuid())
  userId    String
  snippetId String

  user    User    @relation(fields: [userId], references: [id])
  snippet Snippet @relation(fields: [snippetId], references: [id])

  @@unique([userId, snippetId])
  @@index([userId])
  @@index([snippetId])
}
